<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CustomerDAO">

<!-- 고객정보 조회 -->
<select id="getCustomerInfo" parameterType="String" resultType="customerMyPage">
	select * from member where m_id = #{id}
</select>

<!-- 고객정보 업데이트-->
<update id="updateMypageInfo" parameterType="customerMyPage" >
	update member set
	m_pass = #{m_pass},
	m_tel = #{m_tel}, 
	m_email = #{m_email}
	where m_id = #{m_id}
</update>

<!-- 고객리뷰 리스트 조회 -->
<select id="getCustomerReview" parameterType="String" resultType="customerReview">
	select p.p_code, p.p_date, p.p_sum, p.p_ck, re.rv_date from pay_test p, review_test re where p.p_code = re.p_code
</select>

<!-- 고객QnA DB 리스트 조회 -->
<select id="getCustomerQnA" parameterType="String" resultType="customerQnA">
	select m_id, qna_code, qna_title, qna_qdate, qna_adate from qna where m_id = #{m_id} order by qna_code desc
</select>

<!-- 고객QnA 작성하기 insert -->
<insert id="insertQnA" parameterType="String">
	insert into qna(qna_code, qna_title, qna_content, qna_qdate, m_id) values (qna_code_sqn.nextval, #{qna_title}, #{qna_content}, sysdate, #{m_id})
</insert>

<!-- 고객QnA 답변 조회 -->
<select id="getCustomerQnAA" parameterType="Integer" resultType="customerQnA">
	select qna_code, qna_title, qna_adate, qna_reply from qna where qna_code = #{qna_code}
</select>

<!--  고객 QnA 전체 페이지 수 계산 -->
<select id="getQnAListCount" parameterType="String" resultType="Integer">
	select count(*) as totalPageCount from qna where m_id = #{id}
</select>

<!-- 고객후기(review) 작성하기 insert -->
<insert id="insertReview" parameterType="customerReview">
	insert  into review_test(rv_code, rv_star, rv_content, rv_date, p_code) values (rv_code_sqn.nextval, #{rv_star}, #{rv_content}, sysdate, #{p_code})
</insert>

<!-- 전체 페이지 수 계산 쿼리-->
<select id="getTotalCountPage" parameterType="String" resultType="Integer">

	select count(*) from review_test re, pay p, final_order fo, orderinfo oi 
	where re.p_code = p.p_code 
	and p.fo_code = fo.fo_code 
	and fo.o_code = oi.o_code 
	and oi.m_id = #{id} 

</select>

<!-- 페이지에 맞는 행 반환 -->
<select id="getPageList" parameterType="customerReview" resultType="customerReview">

<![CDATA[
	select
	rv_code,
	rv_content,
	to_char(rv_date,'yyyy-mm-dd') as rv_date,
	rv_like,
	rv_star,
	p_code
	from review_test 
	where rv_code in ( select rv_code
 	from (select rownum as r_num, rv_code 
 	from (
 	select rownum, rv_code from review_test re, pay p, final_order fo, orderinfo oi 
	where re.p_code = p.p_code 
	and p.fo_code = fo.fo_code 
	and fo.o_code = oi.o_code 
	and oi.m_id = #{m_id}
	order by rv_code desc
 	)) 
 	where r_num >= #{firstNum} and r_num <= #{endNum})
 	order by rv_code desc
]]>

</select>

</mapper>