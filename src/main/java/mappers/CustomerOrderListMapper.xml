<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="customerOrderDAO">

<!-- 전체 페이지 수 계산 -->
<select id="getOrderListCount" parameterType="String" resultType="Integer">

	select 
	count(*) as totalPageCount
	 from orderinfo where m_id = #{id}
	
</select>

<!-- 페이지에 해당 하는 데이터 추출 -->
<select id="getOrderList" parameterType="customerOrderList" resultType="customerOrderList">
 	
<![CDATA[
	select
	oi.o_code,
	oi.o_content,
	oi.m_id,
	to_char(oi.o_date,'yyyy-mm-dd') as o_date,
	oi.s_id,
	st.s_name  
	from orderinfo oi, store st
	where o_code in ( select o_code
 		from (select rownum as r_num, o_code from (select rownum,o_code from orderinfo where m_id = #{m_id} order by o_code desc))
 		where r_num >= #{firstNum} and r_num <= #{endNum})
 		and oi.s_id = st.s_id 
 	order by o_code desc
]]>
 	
</select>

<!-- 주문 상세요청(기타) 사항 조회 SQL문 -->
<select id="getEtcList" parameterType="Integer" resultType="customerEtcList">

<![CDATA[
	select  
	et.ETC_CODE, 
	et.ETC_SPNAME, 
	o.O_CODE, 
	et.ETC_TYPE_CODE, 
	et.ETC_PPATH, 
	et.ETC_PNAME, 
	et.ETC_PSIZE, 
	et.ETC_CONTENT, 
	et.ETC_DATE,
	o.s_id,
	o.m_id,
	o.O_CONTENT,
	o.o_date,
	st.s_name
	from orderinfo o, etc et, store st
	where o.o_code = et.o_code(+)
	and o.s_id = st.s_id  
	and o.o_code = #{o_code}
	order by ETC_DATE
]]>

</select>

<!-- 주문번호 기준으로 최종 주문서 조회 SQL문 -->
<select id="getFinalOrder" parameterType="Integer" resultType="customerFinalOrder">

	select * from final_order where o_code = #{o_code} and rownum = 1 order by FO_DATE desc

</select>

<!-- 최종 주문서 번호 기준으로 최종 주문서 조회 SQL문 -->
<select id="getFinalOrderInfo" parameterType="Integer" resultType="customerFinalOrder">
<![CDATA[
	select 
	cm.catemm_name, 
	cs.cates_name,
	fo.fo_code,
	fo.o_code,
	fo.cates_code,
	fo.deli_code,
	fo.fo_date,
	fo.fo_sum,
	fo.fo_num,
	fo.fo_size,
	fo.fo_etc,
	fo.o_code,
	ma.m_acc_bank,
	ma.m_acc_num,
	ca.card_company,
	ca.card_num,
	oi.m_id,
	p.p_code
	from final_order fo, cate_sub cs, cate_mid cm, orderinfo oi, member m, card ca, member_acc ma, pay p 
	where fo.fo_code = #{foCode} 
	and fo.cates_code = cs.cates_code 
	and fo.o_code = oi.o_code 
	and oi.m_id = m.m_id 
	and m.m_id = ca.m_id(+)
	and m.m_id = ma.m_id(+)
	and fo.fo_code = p.fo_code(+)
	and cs.catemm_code = cm.catemm_code
]]>
</select>

<!-- 결제정보 입력 -->
<insert id="insertPayInfo" parameterType="customerPurchase">
	
	insert into pay(
		p_code,
		fo_code,
		pt_code,
		p_date,
		p_sum,
		p_ck)
	values(
		p_code_sqn.nextval,
		#{fo_code},
		#{pt_code},
		sysdate,
		#{p_sum},
		'N')
		


</insert>

<!-- 배송정보 입력 -->
<insert id="insertDeliveryInfo" parameterType="customerPurchase">

	insert into delivery(
		d_code,
		p_code,
		d_name,
		d_tel,
		d_addr,
		d_memo,
		d_state)
	values(
		d_code_sqn.nextval,
		(select p_code from pay where fo_code = #{fo_code}),
		#{d_name},
		#{d_tel},
		#{d_addr},
		#{d_memo},
		'주문완료'
	)
</insert>

	<!-- 주문 요청 사항 등록 -->
	<insert id="insertEtcContent" parameterType="customerEtcList">

		insert into etc(
		etc_code,
		o_code,
		etc_type_code,
		etc_content,
		etc_date
		<if test="etc_spname neq null">
			,etc_pname,
			etc_spname,
			etc_ppath,
			etc_psize
		</if>
		) values(
		etc_code_sqn.nextval,
		#{o_code},
		#{etc_type_code},
		#{etc_content},
		to_char(sysdate,'yyyy-mm-dd hh24:mi:ss')
		<if test="etc_spname neq null">
			,#{etc_pname},
			#{etc_spname},
			#{etc_ppath},
			#{etc_psize}
		</if>
		)

	</insert>
</mapper>