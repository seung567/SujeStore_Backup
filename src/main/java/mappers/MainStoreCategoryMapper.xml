<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MainStoreCategoryDao">

<!-- store 전체 행수 -->
<select id="getTotalAllCountPage" resultType="integer">
	select count(*) as cnt
	from store s, store_avail sa
	where s.s_id=sa.s_id and sa.sa_ck='승인'
</select>

<!-- store 조건 포함 행수 -->
<select id="getLimitTotalCountPage" parameterType="mainStoreCategoryVO" resultType="integer">
<!-- 	select count(*) as cnt
	from (select s.s_id, cmm.catemm_name, cm.catem_name
		  from store s, store_avail sa, cate_sub cs, cate_mid cmm, cate_main cm, goods g
		  where s.s_id=sa.s_id and sa.sa_ck='승인'
			and g.s_id=s.s_id
			and g.cates_code=cs.cates_code 
			and cs.catemm_code=cmm.catemm_code 
			and cmm.catem_code=cm.catem_code
		<if test="catemm_name != null">
			and cm.catem_name=#{catem_name} and cmm.catemm_name=#{catemm_name}
		</if>  
		<if test="catemm_name == null">
			and cm.catem_name=#{catem_name}
		</if>  
		  group by s.s_id, cmm.catemm_name, cm.catem_name) -->
		  

	<if test="catemm_name != null">
		select count(st.s_id)  
		from store st, store_avail sa, cate_main cm, cate_mid cmi 
	</if>
	<if test="catemm_name == null">
		select count(st.s_id) 
		from store st, store_avail sa, cate_main cm 
	</if>
	
	where st.s_id = sa.s_id 
	
	<if test="catemm_name != null">
		and cmi.catem_code = cm.catem_code 
		and cm.catem_code = st.catem_code 
		and catemm_name = #{catemm_name}
	</if>
	<if test="catemm_name == null">
		and cm.catem_code = st.catem_code 
		and catem_name = #{catem_name}
	</if>
	and sa_ck = '승인'
</select>



<sql id="storeCateList">

	with
	<!-- 대분류 기준 -->
	<if test="catem_name != null and catemm_name == null">
		cateStoreList as ( 
		select cmain.catem_name, st.s_id 
		from store st, cate_main cmain
		where 
		cmain.catem_code = st.catem_code 
		and cmain.catem_name=${catem_name}
		),
	</if>
	<!-- 중분류 기준 -->
	<if test="catem_name != null and catemm_name != null">
		cateStoreList as ( 
		select cmid.catemm_name, cmain.catem_name, st.s_id 
		from store st, cate_main cmain, cate_mid cmid 
		where 
		cmid.catem_code = cmain.catem_code 
		and cmain.catem_code = st.catem_code 
		and cmid.catemm_name= ${catemm_name}
		),
	</if>
	<!-- 리뷰 횟수 // 별점 평균 -->
		reviewStoreList as ( 
		select st.s_id, count(re.rv_code) as reviewCount, nvl(avg(re.rv_star),0) as starSum  
		from store st, orderinfo oi, final_order fo, pay pa, review re 
		where 
		st.s_id = oi.s_id(+) 
		and oi.o_code = fo.o_code(+) 
		and fo.fo_code = pa.fo_code(+) 
		and pa.p_code = re.p_code(+) 
		group by st.s_id) 

</sql>


<!-- store 테이블 호출 -->
<select id="getStoreAllList" parameterType="mainStoreCategoryVO" resultType="mainStoreCategoryVO" >

	<include refid="storeCateList">
		<property name="catem_name" value="#{catem_name}"/>
		<property name="catemm_name" value="#{catemm_name}"/>
	</include>
	
	<!-- 대분류 기준 -->
	<if test="catem_name != null and catemm_name == null">
		select s.s_id, s.s_name, s.s_pname, cateList.catem_name, review.reviewCount as countRvCode, review.starSum as avgRvStar 
		from store s, cateStoreList  cateList, reviewStoreList review 
		where  s.s_id = review.s_id and s.s_id = cateList.s_id 
		order by 1
	</if>
	<!-- 중분류 기준 -->
	<if test="catem_name != null and catemm_name != null">
		select s.s_id, s.s_name, s.s_pname, cateList.catem_name,cateList.catemm_name, review.reviewCount as countRvCode, review.starSum as avgRvStar 
		from store s, cateStoreList  cateList, reviewStoreList review 
		where  s.s_id = review.s_id and s.s_id = cateList.s_id 
		order by 1
	</if>

</select>


<!-- store 상세정보 호출 -->
<select id="getStoreInfo" parameterType="String" resultType="mainStoreCategoryVO">
	SELECT s.s_id, s.s_name, s.s_tel, s.s_addr, s.s_spname, s.s_text, COALESCE(AVG(r.rv_star), 0) AS avgRvStar, COALESCE(COUNT(r.rv_code), 0) AS countRvCode, cm.catem_name
	FROM store s
		 LEFT JOIN orderinfo oi ON s.S_ID = oi.S_ID
		 LEFT JOIN final_order fo ON oi.O_CODE = fo.O_CODE
		 LEFT JOIN pay p ON fo.FO_CODE = p.FO_CODE
		 LEFT JOIN review r ON p.P_CODE = r.P_CODE
		 LEFT JOIN cate_main cm ON s.catem_code=cm.catem_code
	WHERE s.s_id=#{sId}
	GROUP BY s.s_id, s.s_name, s.s_tel, s.s_addr, s.s_spname, s.s_text, cm.catem_name 
</select> 

<!-- review 전체 행수 -->
<select id="getReviewTotalCountPage" resultType="integer">
	select count(*) as cnt
	from review r, pay p, final_order fo, orderinfo o, store s
	where s.s_id=o.s_id
		and o.o_code=fo.o_code
		and fo.fo_code=p.fo_code
		and p.p_code=r.p_code
		and s.s_id=#{sId}
</select>

<!-- review 상세정보 호출 -->
<select id="getStoreReviewList" resultType="mainStoreCategoryVO">
	select r.rv_content, o.m_id, r.rv_star, r.rv_like, rp.rvp_spname
	from review r, review_photo rp, pay p, final_order fo, orderinfo o, store s
	where s.s_id=o.s_id
		and r.rv_code=rp.rv_code(+)
		and o.o_code=fo.o_code
		and fo.fo_code=p.fo_code
		and p.p_code=r.p_code
		and s.s_id=#{s_id}
</select> 

</mapper>